// Fun√ß√£o formatDate corrigida
function formatDate(date) {
  // Se √© uma string no formato YYYY-MM-DD, adicionar hor√°rio para evitar problemas de fuso
  if (typeof date === 'string' && date.match(/^\d{4}-\d{2}-\d{2}$/)) {
    return new Intl.DateTimeFormat('pt-BR').format(new Date(date + 'T12:00:00'))
  }
  return new Intl.DateTimeFormat('pt-BR').format(new Date(date))
}

// Fun√ß√£o formatDate antiga (problem√°tica)
function formatDateOld(date) {
  return new Intl.DateTimeFormat('pt-BR').format(new Date(date))
}

function testFormatDateFix() {
  console.log('üß™ TESTE DE CORRE√á√ÉO - formatDate')
  console.log('=' .repeat(50))
  
  // Teste 1: Data como string YYYY-MM-DD (caso problem√°tico)
  const dateString = '2025-08-15'
  console.log('üìÖ TESTE 1 - String de data:')
  console.log(`‚Ä¢ Data: ${dateString}`)
  console.log(`‚Ä¢ ‚ùå Fun√ß√£o antiga: ${formatDateOld(dateString)}`)
  console.log(`‚Ä¢ ‚úÖ Fun√ß√£o corrigida: ${formatDate(dateString)}`)
  
  // Teste 2: Data atual
  const today = new Date()
  const todayString = today.toISOString().split('T')[0]
  console.log('\nüìÖ TESTE 2 - Data atual:')
  console.log(`‚Ä¢ Data como string: ${todayString}`)
  console.log(`‚Ä¢ ‚ùå Fun√ß√£o antiga: ${formatDateOld(todayString)}`)
  console.log(`‚Ä¢ ‚úÖ Fun√ß√£o corrigida: ${formatDate(todayString)}`)
  
  // Teste 3: Objeto Date
  console.log('\nüìÖ TESTE 3 - Objeto Date:')
  console.log(`‚Ä¢ Data: ${today.toISOString()}`)
  console.log(`‚Ä¢ ‚ùå Fun√ß√£o antiga: ${formatDateOld(today)}`)
  console.log(`‚Ä¢ ‚úÖ Fun√ß√£o corrigida: ${formatDate(today)}`)
  
  // Teste 4: Compara√ß√£o com diferentes datas
  const testDates = ['2025-08-01', '2025-08-15', '2025-12-25']
  console.log('\nüìÖ TESTE 4 - M√∫ltiplas datas:')
  testDates.forEach(dateStr => {
    console.log(`‚Ä¢ ${dateStr}:`)
    console.log(`  ‚ùå Antiga: ${formatDateOld(dateStr)}`)
    console.log(`  ‚úÖ Nova: ${formatDate(dateStr)}`)
  })
  
  // Teste 5: Verificar se h√° diferen√ßa
  console.log('\nüîç TESTE 5 - Verifica√ß√£o de diferen√ßas:')
  testDates.forEach(dateStr => {
    const oldResult = formatDateOld(dateStr)
    const newResult = formatDate(dateStr)
    const isDifferent = oldResult !== newResult
    console.log(`‚Ä¢ ${dateStr}: ${isDifferent ? '‚ö†Ô∏è  DIFERENTE' : '‚úÖ IGUAL'}`)
    if (isDifferent) {
      console.log(`  Antiga: ${oldResult}`)
      console.log(`  Nova: ${newResult}`)
    }
  })
  
  console.log('\nüí° CORRE√á√ÉO APLICADA:')
  console.log('‚Ä¢ Fun√ß√£o formatDate agora adiciona "T12:00:00" para strings YYYY-MM-DD')
  console.log('‚Ä¢ Isso evita problemas de interpreta√ß√£o UTC vs local')
  console.log('‚Ä¢ Datas exibidas devem estar corretas agora')
  
  console.log('\nüéØ TESTE NA APLICA√á√ÉO:')
  console.log('1. Crie uma nova conta com data espec√≠fica')
  console.log('2. Verifique se a data exibida na lista est√° correta')
  console.log('3. Compare com a data que voc√™ selecionou')
}

testFormatDateFix()